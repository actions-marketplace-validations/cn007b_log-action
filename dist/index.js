(()=>{var __webpack_modules__={450:module=>{module.exports=eval("require")("@actions/core")},177:module=>{module.exports=eval("require")("@actions/github")},147:e=>{"use strict";e.exports=require("fs")},687:e=>{"use strict";e.exports=require("https")}};var __webpack_module_cache__={};function __nccwpck_require__(e){var t=__webpack_module_cache__[e];if(t!==undefined){return t.exports}var _=__webpack_module_cache__[e]={exports:{}};var r=true;try{__webpack_modules__[e](_,_.exports,__nccwpck_require__);r=false}finally{if(r)delete __webpack_module_cache__[e]}return _.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var __webpack_exports__={};(()=>{const e=__nccwpck_require__(147);const t=__nccwpck_require__(687);const _=__nccwpck_require__(450);const r=__nccwpck_require__(177);const a="realtimelog.herokuapp.com";const main=async()=>{const t=_.getInput("stream-id");const s=_.getInput("message");const o=_.getInput("file-path");let c="";if(o){const t=await e.readFileSync(o);c=t.toString()}const n=JSON.stringify({title:"GitHub Action.",message:s,file:c,payload:r.context.payload});_.setOutput("stream-id",`${t}, Open URL: https://${a}/${t}`);_.setOutput("file-path",o);_.setOutput("request-data",n);_.info(`stream-id: ${t}`);_.info(`request-data: ${n}`);log(t,n)};const log=async(e,r)=>{try{const s={hostname:a,port:443,path:"/"+e,method:"POST",headers:{"Content-Type":"application/json","Content-Length":r.length}};const o=t.request(s,(e=>{e.on("data",(e=>_.setOutput("response-data",e)))}));o.on("error",(e=>{_.setFailed(e)}));o.write(r);o.end()}catch(e){_.setFailed(e.message)}};main()})();module.exports=__webpack_exports__})();